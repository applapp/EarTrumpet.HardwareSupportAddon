<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="HardwareControlsTitle" xml:space="preserve">
    <value>Hardware Controls</value>
  </data>
  <data name="AddNewText" xml:space="preserve">
    <value>Add New</value>
  </data>
  <data name="HardwareControlInformation" xml:space="preserve">
    <value>Control system- and application volumes using a controller hardware (MIDI and deej devices supported).</value>
  </data>
  <data name="HardwareSettingsText" xml:space="preserve">
    <value>Add / Edit Hardware Control</value>
  </data>
  <data name="MidiDeviceText" xml:space="preserve">
    <value>MIDI Device</value>
  </data>
  <data name="CommandText" xml:space="preserve">
    <value>Command</value>
  </data>
  <data name="ControlText" xml:space="preserve">
    <value>Control</value>
  </data>
  <data name="SelectText" xml:space="preserve">
    <value>Select</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="ModeText" xml:space="preserve">
    <value>Mode</value>
  </data>
  <data name="SelectionText" xml:space="preserve">
    <value>Selection</value>
  </data>
  <data name="AudioDeviceText" xml:space="preserve">
    <value>Audio Device</value>
  </data>
  <data name="MidiControlWizardText" xml:space="preserve">
    <value>MIDI Control Wizard</value>
  </data>
  <data name="DeleteSelectedText" xml:space="preserve">
    <value>Delete Selected</value>
  </data>
  <data name="EditSelectedText" xml:space="preserve">
    <value>Edit Selected</value>
  </data>
  <data name="AddNewFromSelectedText" xml:space="preserve">
    <value>Add New From Selected</value>
  </data>
  <data name="AudioDeviceVolumeText" xml:space="preserve">
    <value>Device Volume</value>
  </data>
  <data name="AudioDeviceMuteText" xml:space="preserve">
    <value>Device Mute</value>
  </data>
  <data name="ApplicationVolumeText" xml:space="preserve">
    <value>Application Volume</value>
  </data>
  <data name="ApplicationMuteText" xml:space="preserve">
    <value>Application Mute</value>
  </data>
  <data name="ApplicationSelectionText" xml:space="preserve">
    <value>Application Selection</value>
  </data>
  <data name="IndexedText" xml:space="preserve">
    <value>Indexed</value>
  </data>
  <data name="HardwareControlWizardMinMaxLinearPotentiometerControlTypeInstructions" xml:space="preserve">
    <value>Move the selected control to the minimum value and click corresponding 'Set'. Then move the selected control to the maximum value and click corresponding 'Set'.</value>
  </data>
  <data name="SetText" xml:space="preserve">
    <value>Set</value>
  </data>
  <data name="ScalingText" xml:space="preserve">
    <value>Scaling</value>
  </data>
  <data name="HardwareControlWizardMinMaxButtonControlTypeInstructions" xml:space="preserve">
    <value>Release the selected button and click corresponding 'Set' (while released). Then press the selected button and click corresponding 'Set' (while pressed).</value>
  </data>
  <data name="HardwareControlWizardMinMaxRotaryEncoderControlTypeInstructions" xml:space="preserve">
    <value>Turn the selected rotary control in decreasing direction and click corresponding 'Set'. Then turn the selected rotary control in increasing direction and click corresponding 'Set'.</value>
  </data>
  <data name="AllAudioDevicesSelectionText" xml:space="preserve">
    <value>*All Devices*</value>
  </data>
  <data name="DeviceTypeText" xml:space="preserve">
    <value>Device Type</value>
  </data>
  <data name="PushedText" xml:space="preserve">
    <value>Pushed</value>
  </data>
  <data name="ReleasedText" xml:space="preserve">
    <value>Released</value>
  </data>
  <data name="MaximumText" xml:space="preserve">
    <value>Maximum</value>
  </data>
  <data name="MinimumText" xml:space="preserve">
    <value>Minimum</value>
  </data>
  <data name="IncreaseText" xml:space="preserve">
    <value>Increase</value>
  </data>
  <data name="DecreaseText" xml:space="preserve">
    <value>Decrease</value>
  </data>
  <data name="NoControlSelectedMessage" xml:space="preserve">
    <value>No control selected!</value>
  </data>
  <data name="DeejControlWizardText" xml:space="preserve">
    <value>deej Control Wizard</value>
  </data>
  <data name="PreviewValueText" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="HardwareWizardInstructions" xml:space="preserve">
    <value>Move / press the hardware control element to be used. -&gt; Captured changes are listed in the table below. -&gt; Select the control to be assigned.</value>
  </data>
  <data name="ButtonText" xml:space="preserve">
    <value>Button</value>
  </data>
  <data name="LinearPotentiometerText" xml:space="preserve">
    <value>Linear Potentiometer</value>
  </data>
  <data name="RotaryEncoderText" xml:space="preserve">
    <value>Rotary Encoder</value>
  </data>
  <data name="IncompleteDeviceConfigurationMessage" xml:space="preserve">
    <value>Incomplete device configuration!</value>
  </data>
  <data name="UnknownDeviceSelectedMessageText" xml:space="preserve">
    <value>Unknown device selected!</value>
  </data>
  <data name="UnknownDeviceTypeSelectedMessageText" xml:space="preserve">
    <value>Unknown device type selected!</value>
  </data>
  <data name="DeviceText" xml:space="preserve">
    <value>Device</value>
  </data>
  <data name="TypeText" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="SetAsDefaultDevice" xml:space="preserve">
    <value>Set As Default Device</value>
  </data>
  <data name="CycleDefaultDevices" xml:space="preserve">
    <value>Cycle Default Device</value>
  </data>
  <data name="DisplayTimeText" xml:space="preserve">
    <value>Display Time (Seconds)</value>
  </data>
  <data name="EnableOverlayText" xml:space="preserve">
    <value>Enable Overlay</value>
  </data>
  <data name="OSDInformation" xml:space="preserve">
    <value>Show an overlay when changing volumes using hardware controls.</value>
  </data>
  <data name="OverlayTitle" xml:space="preserve">
    <value>Overlay</value>
  </data>
  <data name="PositionText" xml:space="preserve">
    <value>Position</value>
  </data>
  <data name="XOffsetText" xml:space="preserve">
    <value>X-Offset (Pixels)</value>
  </data>
  <data name="YOffsetText" xml:space="preserve">
    <value>Y-Offset (Pixels)</value>
  </data>
  <data name="ButtonShortText" xml:space="preserve">
    <value>B</value>
  </data>
  <data name="LinearPotentiometerShortText" xml:space="preserve">
    <value>LP</value>
  </data>
  <data name="RotaryEncoderShortText" xml:space="preserve">
    <value>RE</value>
  </data>
  <data name="MappingsListHeaderAltText" xml:space="preserve">
    <value>Mappings</value>
  </data>
  <data name="MappingsListHeaderContextText" xml:space="preserve">
    <value>Device or App</value>
  </data>
  <data name="MappingsListHeaderControlText" xml:space="preserve">
    <value>Hardware Control</value>
  </data>
  <data name="MappingsListHeaderTypeText" xml:space="preserve">
    <value>Mapping Type</value>
  </data>
  <data name="MappingsListTypeAppMuteText" xml:space="preserve">
    <value>App Mute</value>
  </data>
  <data name="MappingsListTypeAppVolText" xml:space="preserve">
    <value>App Volume</value>
  </data>
  <data name="MappingsListTypeCycleDevText" xml:space="preserve">
    <value>Cycle Device</value>
  </data>
  <data name="MappingsListTypeSetDevText" xml:space="preserve">
    <value>Set Device</value>
  </data>
  <data name="MappingsListTypeSysMuteText" xml:space="preserve">
    <value>System Mute</value>
  </data>
  <data name="MappingsListTypeSysVolText" xml:space="preserve">
    <value>System Volume</value>
  </data>
</root>